{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/alert.service.ts","webpack:///src/app/alert/alert.component.ts","webpack:///src/app/alert/alert.component.html","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chrono/chrono.component.html","webpack:///src/app/chrono/chrono.component.ts","webpack:///src/app/setup/setup.component.ts","webpack:///src/app/setup/setup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Alert","init","autoClose","Object","assign","AlertType","AlertService","subject","defaultId","asObservable","pipe","x","message","options","alert","type","Success","Info","Warning","next","providedIn","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","filter","keepAfterRouteChange","forEach","push","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","join","selector","templateUrl","styleUrls","Message","encryptP","pass","payload","encrypt","n","decryptP","s","decrypt","encryptedGHToken","gh_key_path","ApiService","http","as","apiUrl","server","gh_key","messages","title","text","releaseDate","titleEnc","textEnc","post","name","value","token","savePass","saveKey","octokit","auth","getKey","log","console","getGHKey","file","data","sha","repos","deleteFile","owner","repo","path","_","tokenEnc","createOrUpdateFile","content","btoa","toPromise","res","getContents","localStorage","setItem","getItem","password","plaintext","pwUtf8","TextEncoder","encode","crypto","subtle","digest","pwHash","iv","getRandomValues","Uint8Array","alg","importKey","key","ptUint8","ctBuffer","ctArray","Array","from","ctStr","map","byte","String","fromCharCode","ctBase64","ivHex","b","toString","slice","ciphertext","match","parseInt","ciphered","atob","ctUint8","ch","charCodeAt","plainBuffer","TextDecoder","decode","routes","component","AppRoutingModule","forRoot","imports","AppComponent","AppModule","initializeApp","firebase","declarations","providers","bootstrap","Note","ChronoComponent","formBuilder","api","modalService","analytics","notes","date","Date","day","getDate","month","getMonth","year","getFullYear","k","sendForm","group","authorName","compose","required","release","notesForm","getMessages","err","error","controls","setDate","setMonth","setFullYear","sendNote","getTime","JSON","stringify","success","logEvent","getNotes","note","length","open","size","SetupComponent","setupForm","api_key","saveKeyToGH","setupGH","environment","production","constantSalt","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport class Alert {\n  id: string;\n  type: AlertType;\n  message: string;\n  autoClose: boolean = true;\n  keepAfterRouteChange: boolean;\n  fade: boolean;\n\n  constructor(init?:Partial<Alert>) {\n    Object.assign(this, init);\n  }\n}\n\nexport enum AlertType {\n  Success,\n  Error,\n  Info,\n  Warning\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n  private subject = new Subject<Alert>();\n  private defaultId = 'default-alert';\n\n  // enable subscribing to alerts observable\n  onAlert(id = this.defaultId): Observable<Alert> {\n    return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n  }\n\n  // convenience methods\n  success(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n  }\n\n  error(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n  }\n\n  info(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n  }\n\n  warn(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n  }\n\n  // main alert method\n  alert(alert: Alert) {\n    alert.id = alert.id || this.defaultId;\n    this.subject.next(alert);\n  }\n\n  // clear alerts\n  clear(id = this.defaultId) {\n    this.subject.next(new Alert({ id }));\n  }\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Alert, AlertService, AlertType} from '../alert.service';\nimport {Subscription} from 'rxjs';\nimport {NavigationStart, Router} from '@angular/router';\n\n@Component({\n  selector: 'alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit, OnDestroy {\n  @Input() id = 'default-alert';\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n\n  constructor(private router: Router, private alertService: AlertService) {\n  }\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService.onAlert(this.id)\n      .subscribe(alert => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) {\n      return;\n    }\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find(x => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter(x => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) {\n      return;\n    }\n\n    const classes = ['alert', 'alert-dismissable'];\n\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    };\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push('fade');\n    }\n\n    return classes.join(' ');\n  }\n}\n","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n  <span [innerHTML]=\"alert.message\"></span>\n</div>\n","import {Injectable, OnInit} from '@angular/core';\nimport {BehaviorSubject, from, Observable, of} from 'rxjs';\nimport {environment} from '../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {flatMap, map} from 'rxjs/operators';\nimport {Note} from './chrono/chrono.component';\nimport {Octokit} from '@octokit/rest';\nimport {AlertService} from './alert.service';\n\nexport class Message {\n  id: string;\n  age: number;\n  date: Date;\n  text: string;\n}\n\nexport function encryptP(pass: string, payload: string) {\n  return from(encrypt(pass, payload)).pipe(flatMap(n => n))\n    ;\n}\n\nexport function decryptP(pass: string, s: string) {\n  return from(decrypt(pass, s)).pipe(flatMap(n => n));\n}\n\nconst encryptedGHToken = '76ffb769ae02d5333b7c2195CokTlfRFy/6OB3H+8YfIPZaRlW+fg8k+mzh34McdL2JElZj3x05SdFKnTnPZ/oRI9tMotT84jxM=';\n\nconst gh_key_path = 'gh_key.txt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService implements OnInit {\n  private apiUrl = environment.server;\n  gh_key: BehaviorSubject<string> = new BehaviorSubject(null);\n\n  private messages: Message[] = [];\n\n  constructor(private http: HttpClient, private as: AlertService) {\n  }\n\n  ngOnInit() {\n    // this.getGHKey();\n  }\n\n  getMessages(): Observable<Message[]> {\n    return of(this.messages);\n  }\n\n  getMessage(id: number): Observable<Message> {\n    return of(this.messages[id]);\n  }\n\n  addMessage(message: Message): Observable<Message> {\n    this.messages.push(message);\n\n    return of(message);\n  }\n\n  sendNote(pass: string, title: string, text: string, releaseDate: number): Observable<Object> {\n    return encryptP(pass, title)\n      .pipe(flatMap(titleEnc =>\n        from(encrypt(pass, text))\n          .pipe(flatMap(textEnc =>\n            this.http.post(this.apiUrl + '/note/' + name, {\n              'pass': pass,\n              'release': releaseDate,\n              'title': titleEnc,\n              'text': textEnc\n            })\n          ))\n      ));\n  }\n\n  getNotes(pass: string): Observable<Note> {\n    return this.http\n      .post(this.apiUrl + '/notes/' + name, {'pass': pass})\n      // .pipe(catchError(this.errorHandler))\n      .pipe(flatMap(value => value as Note[]))\n      .pipe(\n        map(n => decryptP(pass, n.title)\n          .pipe(map(title => {\n            n.title = title;\n            return n;\n          }))\n        )\n      )\n      .pipe(flatMap(n => n))\n      .pipe(\n        map(n => decryptP(pass, n.text)\n          .pipe(map(text => {\n            n.text = text;\n            return n;\n          }))\n        )\n      )\n      .pipe(flatMap(n => n));\n  }\n\n  saveKeyToGH(pass: string, token: string) {\n\n    this.savePass(pass);\n    this.saveKey(token);\n\n    const octokit = new Octokit({auth: this.getKey(), log: console});\n\n    this.getGHKey()\n      .then(file => {\n          console.log(file);\n          console.log(file.data.sha);\n          return octokit.repos.deleteFile({\n            owner: 'ezomode',\n            repo: 'notiki',\n            path: gh_key_path,\n            message: 'delete gh_key',\n            sha: file.data.sha\n          });\n        }\n      )\n      .then(_ => {\n        encryptP(pass, token)\n          .pipe(flatMap(tokenEnc =>\n            octokit.repos.createOrUpdateFile({\n              owner: 'ezomode',\n              repo: 'notiki',\n              path: gh_key_path,\n              message: 'update gh_key',\n              content: btoa(tokenEnc),\n              'committer.name': '',\n              'committer.email': '',\n            })\n          ))\n          .toPromise()\n          .then(res => console.log(res));\n      }\n    );\n  }\n\n  getGHKey() {\n    return new Octokit({auth: this.getKey(), log: console})\n      .repos\n      .getContents({owner: 'ezomode', repo: 'notiki', path: gh_key_path});\n  }\n\n  savePass(s: string) {\n    return localStorage.setItem('password', s);\n  }\n\n  getPass() {\n    return localStorage.getItem('password');\n  }\n\n  saveKey(s: string) {\n    return localStorage.setItem('gh_key', s);\n  }\n\n  getKey() {\n    return localStorage.getItem('gh_key');\n  }\n}\n\n// from https://gist.github.com/chrisveness/43bcda93af9f646d083fad678071b90a\n\n/**\n * Encrypts plaintext using AES-GCM with supplied password, for decryption with aesGcmDecrypt().\n *                                                                      (c) Chris Veness MIT Licence\n *\n * @param   {String} plaintext - Plaintext to be encrypted.\n * @param   {String} password - Password to use to encrypt plaintext.\n * @returns {String} Encrypted ciphertext.\n *\n * @example\n *   const ciphertext = await aesGcmEncrypt('my secret text', 'pw');\n *   aesGcmEncrypt('my secret text', 'pw').then(function(ciphertext) { console.log(ciphertext); });\n */\nasync function encrypt(password: string, plaintext: string): Promise<string> {\n  const pwUtf8 = new TextEncoder().encode(password);                                 // encode password as UTF-8\n  const pwHash = await crypto.subtle.digest('SHA-256', pwUtf8);                      // hash the password\n\n  const iv = crypto.getRandomValues(new Uint8Array(12));                             // get 96-bit random iv\n  console.log('encrypt iv raw: ' + iv);\n\n  const alg = {name: 'AES-GCM', iv: iv};                                           // specify algorithm to use\n  const key = await crypto.subtle.importKey('raw', pwHash, 'AES-GCM', false, ['encrypt']); // generate key from pw\n  const ptUint8 = new TextEncoder().encode(plaintext);                               // encode plaintext as UTF-8\n  const ctBuffer = await crypto.subtle.encrypt(alg, key, ptUint8);                   // encrypt plaintext using key\n\n  const ctArray = Array.from(new Uint8Array(ctBuffer));                              // ciphertext as byte array\n  const ctStr = ctArray.map(byte => String.fromCharCode(byte)).join('');             // ciphertext as string\n  const ctBase64 = btoa(ctStr);                                                      // encode ciphertext as base64\n\n  const ivHex = Array.from(iv).map(b => ('00' + b.toString(16)).slice(-2)).join(''); // iv as hex string\n  console.log('encrypt ivHex: ' + ivHex);\n\n  let s = ivHex + ctBase64;\n\n  console.log(s);\n\n  return s;                                                             // return iv+ciphertext\n}\n\n\n/**\n * Decrypts ciphertext encrypted with aesGcmEncrypt() using supplied password.\n *                                                                      (c) Chris Veness MIT Licence\n *\n * @param   {String} ciphertext - Ciphertext to be decrypted.\n * @param   {String} password - Password to use to decrypt ciphertext.\n * @returns {String} Decrypted plaintext.\n *\n * @example\n *   const plaintext = await aesGcmDecrypt(ciphertext, 'pw');\n *   aesGcmDecrypt(ciphertext, 'pw').then(function(plaintext) { console.log(plaintext); });\n */\nasync function decrypt(password: string, ciphertext: string): Promise<string> {\n  const pwUtf8 = new TextEncoder().encode(password);                                  // encode password as UTF-8\n  const pwHash = await crypto.subtle.digest('SHA-256', pwUtf8);                       // hash the password\n\n  const iv = ciphertext.slice(0, 24).match(/.{2}/g).map(byte => parseInt(byte, 16));   // get iv from ciphertext\n  console.log('decrypt iv: ' + iv);\n\n  const key = await crypto.subtle.importKey('raw', pwHash, 'AES-GCM', false, ['decrypt']);  // use pw to generate key\n\n  let ciphered = ciphertext.slice(24);\n  console.log('decrypt ciphered: ' + ciphered);\n  const ctStr = atob(ciphered);                                           // decode base64 ciphertext\n  const ctUint8 = new Uint8Array(ctStr.match(/[\\s\\S]/g).map(ch => ch.charCodeAt(0))); // ciphertext as Uint8Array\n  // note: why doesn't ctUint8 = new TextEncoder().encode(ctStr) work?\n\n  const alg = {name: 'AES-GCM', iv: new Uint8Array(iv)};                            // specify algorithm to use\n  const plainBuffer = await crypto.subtle.decrypt(alg, key, ctUint8);                 // decrypt ciphertext using key\n                                                                                      // decode password from UTF-8\n  let s = new TextDecoder().decode(plainBuffer);\n\n  console.log(s);\n\n  return s;                                                                   // return the plaintext\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChronoComponent } from './chrono/chrono.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChronoComponent,\n    data: { title: 'Chrono Messages' }\n  },\n  // {\n  //   path: 'msg/add',\n  //   component: MessageAddComponent,\n  //   data: { title: 'Add message' }\n  // },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'memoria';\n}\n","<alert></alert>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ChronoComponent} from './chrono/chrono.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbAlertModule, NgbModule, NgbPaginationModule} from '@ng-bootstrap/ng-bootstrap';\nimport {AlertComponent} from './alert/alert.component';\nimport {AngularFireAnalyticsModule} from '@angular/fire/analytics';\nimport {environment} from '../environments/environment';\nimport {AngularFireModule} from '@angular/fire';\nimport { SetupComponent } from './setup/setup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChronoComponent,\n    AlertComponent,\n    SetupComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgbModule,\n    FormsModule,\n    NgbPaginationModule,\n    NgbAlertModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","<div class=\"container\">\n  <!--<h2>Messages\n    <a class=\"float-right\" [routerLink]=\"['/msg/add']\">\n      <button type=\"button\" class=\"btn btn-primary\">Add</button>\n    </a>\n  </h2>-->\n\n  <app-setup *ngIf=\"!gh_key\"></app-setup>\n\n  <div class=\"row\">\n    <div class=\"col-sm\">\n    </div>\n    <br>\n    <div class=\"col-sm\">\n\n    </div>\n  </div>\n  <br>\n  <div class=\"row\" *ngIf=\"notes.length != 0\">\n\n  </div>\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title text-center\">Notes from {{notes[0].authorName}}</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <table class=\"table table-bordered mt-5\">\n        <thead>\n        <tr>\n          <th>Title</th>\n          <th>Text</th>\n          <!--          <th>Release Date</th>-->\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let item of notes; let i = index;\">\n          <td style=\"width: 25%\">\n            <p>{{item.title}}</p>\n            <p class=\"text-muted small\">{{item.created.toLocaleString()}}</p>\n          </td>\n          <td>\n            <p>{{item.text}}</p>\n          </td>\n          <!--          <td>{{item.releaseDate}}</td>-->\n        </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-light\" ngbAutofocus (click)=\"modal.close('Close click')\">Close</button>\n    </div>\n  </ng-template>\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <div class=\"card\">\n        <h4 class=\"card-header\">Send Note</h4>\n        <div class=\"card-body\">\n\n          <form [formGroup]=\"sendForm\" (ngSubmit)=\"sendNote()\">\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Pass </label>\n              <input type=\"password\" class=\"form-control\" formControlName=\"pass\"/>\n              <br>\n              <label class=\"col-sm-3 col-form-label\">Title </label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"title\"/>\n              </div>\n              <br>\n              <label class=\"col-sm-3 col-form-label\">Text </label>\n              <div class=\"col-sm-9\">\n                <textarea type=\"text\" class=\"md-textarea md-textarea-auto form-control\"\n                          formControlName=\"text\"></textarea>\n              </div>\n              <br>\n              <label class=\"col-sm-3 col-form-label\">Release Date </label>\n              <div class=\"col-sm-9\">\n                <div class=\"form-group\">\n                  <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\"\n                         ngbDatepicker #d=\"ngbDatepicker\"\n                         formControlName=\"release\" [ngModel]=\"releaseDate\" type=\"text\"/>\n                  <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-light float-right\" (click)=\"d.toggle()\" type=\"button\">📅</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <br>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary col-sm-3 col-form-label float-right\">Send</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <br>\n    <div class=\"col-sm\">\n      <div class=\"card\">\n        <h4 class=\"card-header\">Find Notes</h4>\n        <div class=\"card-body\">\n\n          <form [formGroup]=\"notesForm\" (ngSubmit)=\"getNotes()\">\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Pass </label>\n              <div class=\"col-sm-9\">\n                <input type=\"password\" class=\"form-control\" formControlName=\"pass\"/>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary col-sm-3 col-form-label float-right\">Get</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {ApiService, Message} from '../api.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AlertService} from '../alert.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {AngularFireAnalytics} from '@angular/fire/analytics';\n\nexport class Note {\n  id: number;\n  title: string;\n  text: string;\n  authorName: string;\n  created: Date;\n  release: Date;\n}\n\n@Component({\n  selector: 'app-chrono',\n  templateUrl: './chrono.component.html',\n  styleUrls: ['./chrono.component.css']\n})\nexport class ChronoComponent implements OnInit {\n\n  sendForm: FormGroup;\n  notesForm: FormGroup;\n\n  data: Message[] = [];\n  notes: Note[] = [];\n\n  date = new Date();\n  releaseDate = {day: this.date.getDate(), month: this.date.getMonth() + 1, year: this.date.getFullYear()};\n  gh_key: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private as: AlertService,\n    private modalService: NgbModal,\n    private analytics: AngularFireAnalytics,\n  ) {\n  }\n\n  ngOnInit() {\n    this.api.gh_key.subscribe(k => this.gh_key = k);\n\n    this.sendForm = this.formBuilder.group({\n      authorName: ['', Validators.compose([Validators.required])],\n      pass: ['', Validators.compose([Validators.required])],\n      title: ['', Validators.compose([Validators.required])],\n      text: ['', Validators.compose([Validators.required])],\n      release: ['', Validators.compose([Validators.required])],\n    });\n\n    this.notesForm = this.formBuilder.group({\n      pass: ['', Validators.compose([Validators.required])]\n    });\n\n    this.api.getMessages()\n      .subscribe(res => {\n        this.data = res;\n      }, err => {\n        console.log(err);\n        this.as.error('Error: ' + err['message']);\n      });\n  }\n\n  sendNote() {\n    let pass = this.sendForm.controls.pass.value;\n    let title = this.sendForm.controls.title.value;\n    let text = this.sendForm.controls.text.value;\n    let release = this.sendForm.controls.release.value;\n\n    console.log(release);\n\n    let date = new Date();\n    date.setDate(release['day']);\n    date.setMonth(release['month'] - 1);\n    date.setFullYear(release['year']);\n\n    this.api.sendNote(pass, title, text, date.getTime())\n      .subscribe(\n        (res) => {\n          console.log('CREATED: ' + JSON.stringify(res));\n          this.as.success('Sent');\n          this.analytics.logEvent('note');\n        },\n        (err) => {\n          console.log(err);\n          this.as.error('Error: ' + err['message']);\n        });\n  }\n\n  @ViewChild('content')\n  private content: TemplateRef<any>;\n\n  async getNotes() {\n    let pass = this.notesForm.controls.pass.value;\n\n    this.notes = [];\n    this.api.getNotes(pass)\n      .subscribe(note => {\n          this.notes.push(note);\n          console.log('NOTE: ' + JSON.stringify(note));\n          this.analytics.logEvent('getNotes');\n        },\n        err => {\n          console.log(err);\n          // this.as.error('Error: ' + JSON.stringify(err));\n          this.as.error('Error: ' + err['message']);\n        },\n        () => {\n          if (this.notes.length > 0) {\n            this.modalService.open(this.content, {size: 'xl'});\n          }\n        });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ApiService, encryptP} from '../api.service';\nimport {AlertService} from '../alert.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {kebabToCamelCase} from 'codelyzer/util/utils';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.css']\n})\nexport class SetupComponent implements OnInit {\n\n  setupForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private as: AlertService,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n    this.setupForm = this.formBuilder.group({\n      api_key: ['d61653e0271a4c41a7cc04b77679ebc46f8a0e4f', Validators.compose([Validators.required])],\n      pass: ['', Validators.compose([Validators.required])],\n    });\n  }\n\n  setupGH() {\n    let pass = this.setupForm.controls.pass.value;\n    let api_key = this.setupForm.controls.api_key.value;\n\n    this.api.saveKeyToGH(pass, api_key);\n  }\n}\n","<div class=\"card card-default\">\n  <h4 class=\"card-header\">Setup</h4>\n  <div class=\"card-body\">\n    <form [formGroup]=\"setupForm\" (ngSubmit)=\"setupGH()\">\n      <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\">API Key </label>\n        <div class=\"col-sm-9\">\n          <input type=\"text\" class=\"form-control\" formControlName=\"api_key\"/>\n        </div>\n        <label class=\"col-sm-3 col-form-label\">Pass </label>\n        <div class=\"col-sm-9\">\n          <input type=\"password\" class=\"form-control\" formControlName=\"pass\"/>\n        </div>\n        <!--        <label class=\"col-sm-3 col-form-label\">Repeat Pass </label>-->\n        <!--        <div class=\"col-sm-9\">-->\n        <!--          <input type=\"password\" class=\"form-control\" formControlName=\"pass_repeat\"/>-->\n        <!--        </div>-->\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary col-sm-3 col-form-label float-right\">Create</button>\n      </div>\n    </form>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server: \"http://localhost:8080\",\n  constantSalt: \"eFA33n8lvP5yOBWsKQ\",\n  firebase: {\n    apiKey: \"AIzaSyDxrUeq8MSdE9Rr4juycCmnGahWMmDzfA4\",\n    authDomain: \"notiki-dev.firebaseapp.com\",\n    databaseURL: \"https://notiki-dev.firebaseio.com\",\n    projectId: \"notiki-dev\",\n    storageBucket: \"notiki-dev.appspot.com\",\n    messagingSenderId: \"260249045003\",\n    appId: \"1:260249045003:web:1dfb6f44bd2d2019fd1f0e\",\n    measurementId: \"G-KV0B6GKQ8Y\"\n  },\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}