{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/alert.service.ts","./src/app/alert/alert.component.ts","./src/app/alert/alert.component.html","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chrono/chrono.component.ts","./src/app/chrono/chrono.component.html","./src/app/setup/setup.component.ts","./src/app/setup/setup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport class Alert {\n  id: string;\n  type: AlertType;\n  message: string;\n  autoClose: boolean = true;\n  keepAfterRouteChange: boolean;\n  fade: boolean;\n\n  constructor(init?:Partial<Alert>) {\n    Object.assign(this, init);\n  }\n}\n\nexport enum AlertType {\n  Success,\n  Error,\n  Info,\n  Warning\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n  private subject = new Subject<Alert>();\n  private defaultId = 'default-alert';\n\n  // enable subscribing to alerts observable\n  onAlert(id = this.defaultId): Observable<Alert> {\n    return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n  }\n\n  // convenience methods\n  success(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n  }\n\n  error(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n  }\n\n  info(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n  }\n\n  warn(message: string, options?: any) {\n    this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n  }\n\n  // main alert method\n  alert(alert: Alert) {\n    alert.id = alert.id || this.defaultId;\n    this.subject.next(alert);\n  }\n\n  // clear alerts\n  clear(id = this.defaultId) {\n    this.subject.next(new Alert({ id }));\n  }\n}\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Alert, AlertService, AlertType} from '../alert.service';\nimport {Subscription} from 'rxjs';\nimport {NavigationStart, Router} from '@angular/router';\n\n@Component({\n  selector: 'alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit, OnDestroy {\n  @Input() id = 'default-alert';\n  @Input() fade = true;\n\n  alerts: Alert[] = [];\n  alertSubscription: Subscription;\n  routeSubscription: Subscription;\n\n  constructor(private router: Router, private alertService: AlertService) {\n  }\n\n  ngOnInit() {\n    // subscribe to new alert notifications\n    this.alertSubscription = this.alertService.onAlert(this.id)\n      .subscribe(alert => {\n        // clear alerts when an empty alert is received\n        if (!alert.message) {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          this.alerts.forEach(x => delete x.keepAfterRouteChange);\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => this.removeAlert(alert), 3000);\n        }\n      });\n\n    // clear alerts on location change\n    this.routeSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.alertService.clear(this.id);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.alertSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // check if already removed to prevent error on auto close\n    if (!this.alerts.includes(alert)) {\n      return;\n    }\n\n    if (this.fade) {\n      // fade out alert\n      this.alerts.find(x => x === alert).fade = true;\n\n      // remove alert after faded out\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(x => x !== alert);\n      }, 250);\n    } else {\n      // remove alert\n      this.alerts = this.alerts.filter(x => x !== alert);\n    }\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) {\n      return;\n    }\n\n    const classes = ['alert', 'alert-dismissable'];\n\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    };\n\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push('fade');\n    }\n\n    return classes.join(' ');\n  }\n}\n","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n  <span [innerHTML]=\"alert.message\"></span>\n</div>\n","import {Injectable, OnInit} from '@angular/core';\nimport {BehaviorSubject, from, Observable, of} from 'rxjs';\nimport {environment} from '../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {flatMap, map} from 'rxjs/operators';\nimport {Note} from './chrono/chrono.component';\nimport {Octokit} from '@octokit/rest';\nimport {AlertService} from './alert.service';\n\nexport class Message {\n  id: string;\n  age: number;\n  date: Date;\n  text: string;\n}\n\nexport function encryptP(pass: string, payload: string) {\n  return from(encrypt(pass, payload)).pipe(flatMap(n => n))\n    ;\n}\n\nexport function decryptP(pass: string, s: string) {\n  return from(decrypt(pass, s)).pipe(flatMap(n => n));\n}\n\nconst encryptedGHToken = '76ffb769ae02d5333b7c2195CokTlfRFy/6OB3H+8YfIPZaRlW+fg8k+mzh34McdL2JElZj3x05SdFKnTnPZ/oRI9tMotT84jxM=';\n\nconst gh_key_path = 'gh_key.txt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService implements OnInit {\n  private apiUrl = environment.server;\n  gh_key: BehaviorSubject<string> = new BehaviorSubject(null);\n\n  private messages: Message[] = [];\n\n  constructor(private http: HttpClient, private as: AlertService) {\n  }\n\n  ngOnInit() {\n    // this.getGHKey();\n  }\n\n  getMessages(): Observable<Message[]> {\n    return of(this.messages);\n  }\n\n  getMessage(id: number): Observable<Message> {\n    return of(this.messages[id]);\n  }\n\n  addMessage(message: Message): Observable<Message> {\n    this.messages.push(message);\n\n    return of(message);\n  }\n\n  sendNote(pass: string, title: string, text: string, releaseDate: number): Observable<Object> {\n    return encryptP(pass, title)\n      .pipe(flatMap(titleEnc =>\n        from(encrypt(pass, text))\n          .pipe(flatMap(textEnc =>\n            this.http.post(this.apiUrl + '/note/' + name, {\n              'pass': pass,\n              'release': releaseDate,\n              'title': titleEnc,\n              'text': textEnc\n            })\n          ))\n      ));\n  }\n\n  getNotes(pass: string): Observable<Note> {\n    return this.http\n      .post(this.apiUrl + '/notes/' + name, {'pass': pass})\n      // .pipe(catchError(this.errorHandler))\n      .pipe(flatMap(value => value as Note[]))\n      .pipe(\n        map(n => decryptP(pass, n.title)\n          .pipe(map(title => {\n            n.title = title;\n            return n;\n          }))\n        )\n      )\n      .pipe(flatMap(n => n))\n      .pipe(\n        map(n => decryptP(pass, n.text)\n          .pipe(map(text => {\n            n.text = text;\n            return n;\n          }))\n        )\n      )\n      .pipe(flatMap(n => n));\n  }\n\n  saveKeyToGH(pass: string, token: string) {\n\n    this.savePass(pass);\n    this.saveKey(token);\n\n    const octokit = new Octokit({auth: this.getKey(), log: console});\n\n    this.getGHKey()\n      .then(file => {\n          console.log(file);\n          console.log(file.data.sha);\n          return octokit.repos.deleteFile({\n            owner: 'ezomode',\n            repo: 'notiki',\n            path: gh_key_path,\n            message: 'delete gh_key',\n            sha: file.data.sha\n          });\n        }\n      )\n      .then(_ => {\n        encryptP(pass, token)\n          .pipe(flatMap(tokenEnc =>\n            octokit.repos.createOrUpdateFile({\n              owner: 'ezomode',\n              repo: 'notiki',\n              path: gh_key_path,\n              message: 'update gh_key',\n              content: btoa(tokenEnc),\n              'committer.name': '',\n              'committer.email': '',\n            })\n          ))\n          .toPromise()\n          .then(res => console.log(res));\n      }\n    );\n  }\n\n  getGHKey() {\n    return new Octokit({auth: this.getKey(), log: console})\n      .repos\n      .getContents({owner: 'ezomode', repo: 'notiki', path: gh_key_path});\n  }\n\n  savePass(s: string) {\n    return localStorage.setItem('password', s);\n  }\n\n  getPass() {\n    return localStorage.getItem('password');\n  }\n\n  saveKey(s: string) {\n    return localStorage.setItem('gh_key', s);\n  }\n\n  getKey() {\n    return localStorage.getItem('gh_key');\n  }\n}\n\n// from https://gist.github.com/chrisveness/43bcda93af9f646d083fad678071b90a\n\n/**\n * Encrypts plaintext using AES-GCM with supplied password, for decryption with aesGcmDecrypt().\n *                                                                      (c) Chris Veness MIT Licence\n *\n * @param   {String} plaintext - Plaintext to be encrypted.\n * @param   {String} password - Password to use to encrypt plaintext.\n * @returns {String} Encrypted ciphertext.\n *\n * @example\n *   const ciphertext = await aesGcmEncrypt('my secret text', 'pw');\n *   aesGcmEncrypt('my secret text', 'pw').then(function(ciphertext) { console.log(ciphertext); });\n */\nasync function encrypt(password: string, plaintext: string): Promise<string> {\n  const pwUtf8 = new TextEncoder().encode(password);                                 // encode password as UTF-8\n  const pwHash = await crypto.subtle.digest('SHA-256', pwUtf8);                      // hash the password\n\n  const iv = crypto.getRandomValues(new Uint8Array(12));                             // get 96-bit random iv\n  console.log('encrypt iv raw: ' + iv);\n\n  const alg = {name: 'AES-GCM', iv: iv};                                           // specify algorithm to use\n  const key = await crypto.subtle.importKey('raw', pwHash, 'AES-GCM', false, ['encrypt']); // generate key from pw\n  const ptUint8 = new TextEncoder().encode(plaintext);                               // encode plaintext as UTF-8\n  const ctBuffer = await crypto.subtle.encrypt(alg, key, ptUint8);                   // encrypt plaintext using key\n\n  const ctArray = Array.from(new Uint8Array(ctBuffer));                              // ciphertext as byte array\n  const ctStr = ctArray.map(byte => String.fromCharCode(byte)).join('');             // ciphertext as string\n  const ctBase64 = btoa(ctStr);                                                      // encode ciphertext as base64\n\n  const ivHex = Array.from(iv).map(b => ('00' + b.toString(16)).slice(-2)).join(''); // iv as hex string\n  console.log('encrypt ivHex: ' + ivHex);\n\n  let s = ivHex + ctBase64;\n\n  console.log(s);\n\n  return s;                                                             // return iv+ciphertext\n}\n\n\n/**\n * Decrypts ciphertext encrypted with aesGcmEncrypt() using supplied password.\n *                                                                      (c) Chris Veness MIT Licence\n *\n * @param   {String} ciphertext - Ciphertext to be decrypted.\n * @param   {String} password - Password to use to decrypt ciphertext.\n * @returns {String} Decrypted plaintext.\n *\n * @example\n *   const plaintext = await aesGcmDecrypt(ciphertext, 'pw');\n *   aesGcmDecrypt(ciphertext, 'pw').then(function(plaintext) { console.log(plaintext); });\n */\nasync function decrypt(password: string, ciphertext: string): Promise<string> {\n  const pwUtf8 = new TextEncoder().encode(password);                                  // encode password as UTF-8\n  const pwHash = await crypto.subtle.digest('SHA-256', pwUtf8);                       // hash the password\n\n  const iv = ciphertext.slice(0, 24).match(/.{2}/g).map(byte => parseInt(byte, 16));   // get iv from ciphertext\n  console.log('decrypt iv: ' + iv);\n\n  const key = await crypto.subtle.importKey('raw', pwHash, 'AES-GCM', false, ['decrypt']);  // use pw to generate key\n\n  let ciphered = ciphertext.slice(24);\n  console.log('decrypt ciphered: ' + ciphered);\n  const ctStr = atob(ciphered);                                           // decode base64 ciphertext\n  const ctUint8 = new Uint8Array(ctStr.match(/[\\s\\S]/g).map(ch => ch.charCodeAt(0))); // ciphertext as Uint8Array\n  // note: why doesn't ctUint8 = new TextEncoder().encode(ctStr) work?\n\n  const alg = {name: 'AES-GCM', iv: new Uint8Array(iv)};                            // specify algorithm to use\n  const plainBuffer = await crypto.subtle.decrypt(alg, key, ctUint8);                 // decrypt ciphertext using key\n                                                                                      // decode password from UTF-8\n  let s = new TextDecoder().decode(plainBuffer);\n\n  console.log(s);\n\n  return s;                                                                   // return the plaintext\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChronoComponent } from './chrono/chrono.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChronoComponent,\n    data: { title: 'Chrono Messages' }\n  },\n  // {\n  //   path: 'msg/add',\n  //   component: MessageAddComponent,\n  //   data: { title: 'Add message' }\n  // },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'memoria';\n}\n","<alert></alert>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ChronoComponent} from './chrono/chrono.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbAlertModule, NgbModule, NgbPaginationModule} from '@ng-bootstrap/ng-bootstrap';\nimport {AlertComponent} from './alert/alert.component';\nimport {AngularFireAnalyticsModule} from '@angular/fire/analytics';\nimport {environment} from '../environments/environment';\nimport {AngularFireModule} from '@angular/fire';\nimport { SetupComponent } from './setup/setup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChronoComponent,\n    AlertComponent,\n    SetupComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgbModule,\n    FormsModule,\n    NgbPaginationModule,\n    NgbAlertModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {ApiService, Message} from '../api.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AlertService} from '../alert.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {AngularFireAnalytics} from '@angular/fire/analytics';\n\nexport class Note {\n  id: number;\n  title: string;\n  text: string;\n  authorName: string;\n  created: Date;\n  release: Date;\n}\n\n@Component({\n  selector: 'app-chrono',\n  templateUrl: './chrono.component.html',\n  styleUrls: ['./chrono.component.css']\n})\nexport class ChronoComponent implements OnInit {\n\n  sendForm: FormGroup;\n  notesForm: FormGroup;\n\n  data: Message[] = [];\n  notes: Note[] = [];\n\n  date = new Date();\n  releaseDate = {day: this.date.getDate(), month: this.date.getMonth() + 1, year: this.date.getFullYear()};\n  gh_key: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private as: AlertService,\n    private modalService: NgbModal,\n    private analytics: AngularFireAnalytics,\n  ) {\n  }\n\n  ngOnInit() {\n    this.api.gh_key.subscribe(k => this.gh_key = k);\n\n    this.sendForm = this.formBuilder.group({\n      authorName: ['', Validators.compose([Validators.required])],\n      pass: ['', Validators.compose([Validators.required])],\n      title: ['', Validators.compose([Validators.required])],\n      text: ['', Validators.compose([Validators.required])],\n      release: ['', Validators.compose([Validators.required])],\n    });\n\n    this.notesForm = this.formBuilder.group({\n      pass: ['', Validators.compose([Validators.required])]\n    });\n\n    this.api.getMessages()\n      .subscribe(res => {\n        this.data = res;\n      }, err => {\n        console.log(err);\n        this.as.error('Error: ' + err['message']);\n      });\n  }\n\n  sendNote() {\n    let pass = this.sendForm.controls.pass.value;\n    let title = this.sendForm.controls.title.value;\n    let text = this.sendForm.controls.text.value;\n    let release = this.sendForm.controls.release.value;\n\n    console.log(release);\n\n    let date = new Date();\n    date.setDate(release['day']);\n    date.setMonth(release['month'] - 1);\n    date.setFullYear(release['year']);\n\n    this.api.sendNote(pass, title, text, date.getTime())\n      .subscribe(\n        (res) => {\n          console.log('CREATED: ' + JSON.stringify(res));\n          this.as.success('Sent');\n          this.analytics.logEvent('note');\n        },\n        (err) => {\n          console.log(err);\n          this.as.error('Error: ' + err['message']);\n        });\n  }\n\n  @ViewChild('content')\n  private content: TemplateRef<any>;\n\n  async getNotes() {\n    let pass = this.notesForm.controls.pass.value;\n\n    this.notes = [];\n    this.api.getNotes(pass)\n      .subscribe(note => {\n          this.notes.push(note);\n          console.log('NOTE: ' + JSON.stringify(note));\n          this.analytics.logEvent('getNotes');\n        },\n        err => {\n          console.log(err);\n          // this.as.error('Error: ' + JSON.stringify(err));\n          this.as.error('Error: ' + err['message']);\n        },\n        () => {\n          if (this.notes.length > 0) {\n            this.modalService.open(this.content, {size: 'xl'});\n          }\n        });\n  }\n}\n","<div class=\"container\">\n  <!--<h2>Messages\n    <a class=\"float-right\" [routerLink]=\"['/msg/add']\">\n      <button type=\"button\" class=\"btn btn-primary\">Add</button>\n    </a>\n  </h2>-->\n\n  <app-setup *ngIf=\"!gh_key\"></app-setup>\n\n  <div class=\"row\">\n    <div class=\"col-sm\">\n    </div>\n    <br>\n    <div class=\"col-sm\">\n\n    </div>\n  </div>\n  <br>\n  <div class=\"row\" *ngIf=\"notes.length != 0\">\n\n  </div>\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title text-center\">Notes from {{notes[0].authorName}}</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <table class=\"table table-bordered mt-5\">\n        <thead>\n        <tr>\n          <th>Title</th>\n          <th>Text</th>\n          <!--          <th>Release Date</th>-->\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let item of notes; let i = index;\">\n          <td style=\"width: 25%\">\n            <p>{{item.title}}</p>\n            <p class=\"text-muted small\">{{item.created.toLocaleString()}}</p>\n          </td>\n          <td>\n            <p>{{item.text}}</p>\n          </td>\n          <!--          <td>{{item.releaseDate}}</td>-->\n        </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-light\" ngbAutofocus (click)=\"modal.close('Close click')\">Close</button>\n    </div>\n  </ng-template>\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <div class=\"card\">\n        <h4 class=\"card-header\">Send Note</h4>\n        <div class=\"card-body\">\n\n          <form [formGroup]=\"sendForm\" (ngSubmit)=\"sendNote()\">\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Pass </label>\n              <input type=\"password\" class=\"form-control\" formControlName=\"pass\"/>\n              <br>\n              <label class=\"col-sm-3 col-form-label\">Title </label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"title\"/>\n              </div>\n              <br>\n              <label class=\"col-sm-3 col-form-label\">Text </label>\n              <div class=\"col-sm-9\">\n                <textarea type=\"text\" class=\"md-textarea md-textarea-auto form-control\"\n                          formControlName=\"text\"></textarea>\n              </div>\n              <br>\n              <label class=\"col-sm-3 col-form-label\">Release Date </label>\n              <div class=\"col-sm-9\">\n                <div class=\"form-group\">\n                  <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\"\n                         ngbDatepicker #d=\"ngbDatepicker\"\n                         formControlName=\"release\" [ngModel]=\"releaseDate\" type=\"text\"/>\n                  <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-light float-right\" (click)=\"d.toggle()\" type=\"button\">📅</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <br>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary col-sm-3 col-form-label float-right\">Send</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <br>\n    <div class=\"col-sm\">\n      <div class=\"card\">\n        <h4 class=\"card-header\">Find Notes</h4>\n        <div class=\"card-body\">\n\n          <form [formGroup]=\"notesForm\" (ngSubmit)=\"getNotes()\">\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Pass </label>\n              <div class=\"col-sm-9\">\n                <input type=\"password\" class=\"form-control\" formControlName=\"pass\"/>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary col-sm-3 col-form-label float-right\">Get</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ApiService, encryptP} from '../api.service';\nimport {AlertService} from '../alert.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {kebabToCamelCase} from 'codelyzer/util/utils';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.css']\n})\nexport class SetupComponent implements OnInit {\n\n  setupForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private as: AlertService,\n    private modalService: NgbModal,\n  ) { }\n\n  ngOnInit() {\n    this.setupForm = this.formBuilder.group({\n      api_key: ['d61653e0271a4c41a7cc04b77679ebc46f8a0e4f', Validators.compose([Validators.required])],\n      pass: ['', Validators.compose([Validators.required])],\n    });\n  }\n\n  setupGH() {\n    let pass = this.setupForm.controls.pass.value;\n    let api_key = this.setupForm.controls.api_key.value;\n\n    this.api.saveKeyToGH(pass, api_key);\n  }\n}\n","<div class=\"card card-default\">\n  <h4 class=\"card-header\">Setup</h4>\n  <div class=\"card-body\">\n    <form [formGroup]=\"setupForm\" (ngSubmit)=\"setupGH()\">\n      <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\">API Key </label>\n        <div class=\"col-sm-9\">\n          <input type=\"text\" class=\"form-control\" formControlName=\"api_key\"/>\n        </div>\n        <label class=\"col-sm-3 col-form-label\">Pass </label>\n        <div class=\"col-sm-9\">\n          <input type=\"password\" class=\"form-control\" formControlName=\"pass\"/>\n        </div>\n        <!--        <label class=\"col-sm-3 col-form-label\">Repeat Pass </label>-->\n        <!--        <div class=\"col-sm-9\">-->\n        <!--          <input type=\"password\" class=\"form-control\" formControlName=\"pass_repeat\"/>-->\n        <!--        </div>-->\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary col-sm-3 col-form-label float-right\">Create</button>\n      </div>\n    </form>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server: \"http://localhost:8080\",\n  constantSalt: \"eFA33n8lvP5yOBWsKQ\",\n  firebase: {\n    apiKey: \"AIzaSyDxrUeq8MSdE9Rr4juycCmnGahWMmDzfA4\",\n    authDomain: \"notiki-dev.firebaseapp.com\",\n    databaseURL: \"https://notiki-dev.firebaseio.com\",\n    projectId: \"notiki-dev\",\n    storageBucket: \"notiki-dev.appspot.com\",\n    messagingSenderId: \"260249045003\",\n    appId: \"1:260249045003:web:1dfb6f44bd2d2019fd1f0e\",\n    measurementId: \"G-KV0B6GKQ8Y\"\n  },\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}